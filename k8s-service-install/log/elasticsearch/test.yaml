apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 012bb72da4568306b4feb31fdb6051bb2dcc9d5324d68bf031ca0da0fa3e10c8
    cni.projectcalico.org/podIP: 10.244.1.213/32
    cni.projectcalico.org/podIPs: 10.244.1.213/32
  creationTimestamp: "2021-11-10T03:50:14Z"
  generateName: elasticsearch-master-
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    controller-revision-hash: elasticsearch-master-5ff556d69
    release: elasticsearch
    statefulset.kubernetes.io/pod-name: elasticsearch-master-0
  name: elasticsearch-master-0
  namespace: efk
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: elasticsearch-master
    uid: 208ea5da-0b70-428f-bd39-30d714e73cd2
  resourceVersion: "2481308"
  uid: cb39458e-28c6-4be9-a30e-b6eaab41d850
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - elasticsearch-master
        topologyKey: kubernetes.io/hostname
  containers:
  - env:
    - name: node.name
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: cluster.initial_master_nodes
      value: elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,
    - name: discovery.seed_hosts
      value: elasticsearch-master-headless
    - name: cluster.name
      value: elasticsearch
    - name: network.host
      value: 0.0.0.0
    - name: node.data
      value: "true"
    - name: node.ingest
      value: "true"
    - name: node.master
      value: "true"
    - name: node.ml
      value: "true"
    - name: node.remote_cluster_client
      value: "true"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    imagePullPolicy: IfNotPresent
    name: elasticsearch
    ports:
    - containerPort: 9200
      name: http
      protocol: TCP
    - containerPort: 9300
      name: transport
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=10s" )
          # Once it has started only check that the node itself is responding
          START_FILE=/tmp/.es_start_file

          # Disable nss cache to avoid filling dentry cache when calling curl
          # This is required with Elasticsearch Docker using nss < 3.52
          export NSS_SDB_USE_CACHE=no

          http () {
            local path="${1}"
            local args="${2}"
            set -- -XGET -s

            if [ "$args" != "" ]; then
              set -- "$@" $args
            fi

            if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
              set -- "$@" -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
            fi

            curl --output /dev/null -k "$@" "http://127.0.0.1:9200${path}"
          }

          if [ -f "${START_FILE}" ]; then
            echo 'Elasticsearch is already running, lets check the node is healthy'
            HTTP_CODE=$(http "/" "-w %{http_code}")
            RC=$?
            if [[ ${RC} -ne 0 ]]; then
              echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with RC ${RC}"
              exit ${RC}
            fi
            # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
            if [[ ${HTTP_CODE} == "200" ]]; then
              exit 0
            elif [[ ${HTTP_CODE} == "503" && "7" == "6" ]]; then
              exit 0
            else
              echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
              exit 1
            fi

          else
            echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=10s" )'
            if http "/_cluster/health?wait_for_status=green&timeout=10s" "--fail" ; then
              touch ${START_FILE}
              exit 0
            else
              echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=10s" )'
              exit 1
            fi
          fi
      failureThreshold: 3
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 3
      timeoutSeconds: 5
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 1Gi
    securityContext:
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /usr/share/elasticsearch/data
      name: elasticsearch-master
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-2cgtp
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: elasticsearch-master-0
  initContainers:
  - command:
    - sysctl
    - -w
    - vm.max_map_count=262144
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    imagePullPolicy: IfNotPresent
    name: configure-sysctl
    resources: {}
    securityContext:
      privileged: true
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-2cgtp
      readOnly: true
  nodeName: aks-worknode-30006234-vmss000000
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  serviceAccount: default
  serviceAccountName: default
  subdomain: elasticsearch-master-headless
  terminationGracePeriodSeconds: 120
  tolerations:
  - effect: NoSchedule
    key: role
    operator: Equal
    value: efk
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: elasticsearch-master
    persistentVolumeClaim:
      claimName: elasticsearch-master-elasticsearch-master-0
  - name: default-token-2cgtp
    secret:
      defaultMode: 420
      secretName: default-token-2cgtp
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-11-10T03:50:20Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2021-11-10T03:52:46Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2021-11-10T03:52:46Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2021-11-10T03:50:14Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://f7146c6fc574371fdabb6e15ce33749b3b94555f8f5461bfc5ea5dec95be7c74
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    imageID: docker.elastic.co/elasticsearch/elasticsearch@sha256:6ae227c688e05f7d487e0cfe08a5a3681f4d60d006ad9b5a1f72a741d6091df1
    lastState: {}
    name: elasticsearch
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-11-10T03:50:20Z"
  hostIP: 10.240.0.5
  initContainerStatuses:
  - containerID: containerd://eb8f12df155ba83d08ba2698e9f64f7a1925740be1b4e50945a8679a1c4e0047
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    imageID: docker.elastic.co/elasticsearch/elasticsearch@sha256:6ae227c688e05f7d487e0cfe08a5a3681f4d60d006ad9b5a1f72a741d6091df1
    lastState: {}
    name: configure-sysctl
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: containerd://eb8f12df155ba83d08ba2698e9f64f7a1925740be1b4e50945a8679a1c4e0047
        exitCode: 0
        finishedAt: "2021-11-10T03:50:19Z"
        reason: Completed
        startedAt: "2021-11-10T03:50:19Z"
  phase: Running
  podIP: 10.244.1.213
  podIPs:
  - ip: 10.244.1.213
  qosClass: Burstable
  startTime: "2021-11-10T03:50:14Z"
